swagger: "2.0" # realized based on Swagger 2.0 version
info:
  version: v1
  title: Database Management
  description: "Database Management Related API"

basePath: /regions/{regionId}

paths:
  "/instances/{instanceId}/databases": #Database
    post:
      description: "Create a Database. For instance management and data restoration, RDS restricts user permissions, and users can only create databases through the console or this API."
      operationId: createDatabase
      parameters:
        - name: createDatabase
          in: body
          description:
          schema:
            type: object
            required:
              - dbName
              - characterSetName
            properties:
              dbName:
                type: string
                description: "About database name and database name restrictions, please refer to[Help Center Documentation](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)"
              characterSetName:
                type: string
                description: "About the character set name of the database and the currently supported character set, please see[Enumeration Parameter Definition](../Enum-Definitions/Enum-Definitions.md)"
      responses:
        200:
          description: OK
    get:
      description: "Obtain a list of all database details for the current instance"
      operationId: describeDatabases
      parameters:
        - name: dbName
          required: false
          in: query
          type: string
          description: "Database Name If you do not specify a database name, return all database lists <br> -**MySQL: This field is not supported **<br>- **SQL Server: This field is supported**"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  databases:
                    type: array
                    items:
                      $ref: ../model/Database.yaml#/definitions/Database
  "/instances/{instanceId}/databases/{dbName}": #Database
    delete:
      description: "Delete the database from the RDS instance. For management and data restoration, RDS controls user permissions. Users can only delete databases through the console or this API."
      operationId: deleteDatabase
      x-jdcloud-mfa: true
      responses:
        200:
          description: OK
  "/instances/{instanceId}/databases/{dbName}:restoreDatabaseFromBackup": #Restore the Single Database
    post:
      description: "Restore the single database from backup, and support recovery from backups of other instances (but must be instances under the same account). For example, you can restore from a backup of a database instance in a production environment to a database in a test environment. <br>- Support SQL Server Only"
      operationId: restoreDatabaseFromBackup
      parameters:
        - name: restoreDatabaseFromBackup
          in: body
          description:
          schema:
            type: object
            required:
              - backupId
              - backupFileName
            properties:
              backupId:
                type: string
                description: "Backup ID, which can be obtained from the backup query API, describeBackups"
              backupFileName:
                type: string
                description: "Specify the name of the file in the backup used to restore the database. Normally the file name (excluding the suffix) is the database name of the backup. For example, the file name is my_test_db.bak, indicating that the file is a backup of the my_test_db database."
      responses:
        200:
          description: OK
  "/instances/{instanceId}/databases/{dbName}:restoreDatabaseFromFile": #Restore the SQL Server database from the user-uploaded backup file
    post:
      description: "Restore a single database from the backup file uploaded by the user to the cloud through the Cloud on Single Database<br>- only support SQL Server"
      operationId: restoreDatabaseFromFile
      parameters:
        - name: restoreDatabaseFromFile
          in: body
          description:
          schema:
            type: object
            required:
              - fileName
            properties:
              sharedFileGid:
                type: string
                description: "The global ID of the shared file can be obtained from the query API to upload file [describeImportFiles](../import/describeImportFiles.md); if the file is not a shared file, you do not need to enter this parameter"
              fileName:
                type: string
                description: "The name of the backup file uploaded by the user (including suffix name of the file ), for example, mydb1.bak"
      responses:
        200:
          description: OK
  "/instances/{instanceId}/databases/{dbName}:restoreDatabaseFromOSS": #Restore SQL Server Databases from OSS
    post:
      description: "Restore a single database from the backup file uploaded to OSS<br> - only support SQL Server"
      operationId: restoreDatabaseFromOSS
      parameters:
        - name: restoreDatabaseFromOSS
          in: body
          description:
          schema:
            type: object
            required:
              - ossURL
            properties:
              ossURL:
                type: string
                description: "The inner link of the backup file uploaded by the user to Object Storage Service, OSS"
      responses:
        200:
          description: OK
# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "Region code, with range detailed in [Regions and Availability Zone Comparison Table](../Enum-Definitions/Regions-AZ.md)"
  instanceId:
    name: instanceId
    in: path
    required: true
    type: string
    description: "RDS instance ID, which uniquely identifies an RDS instance"
  dbName:
    name: dbName
    in: path
    required: true
    type: string
    description: "Database name"



