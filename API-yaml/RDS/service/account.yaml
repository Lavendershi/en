swagger: "2.0" # realized based on Swagger 2.0 version
info:
  version: v1
  title: Account Management
  description: API related to Relational Database Service

basePath: /regions/{regionId}

paths:
  "/instances/{instanceId}/accounts":    #Database Account
    get:
      description: "View all account information in an RDS instance, including the account name, access rights to each database, etc."
      operationId: describeAccounts
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: ../model/Account.yaml#/definitions/Account
    post:
      description: "Create a database account. The user can use the client, application, etc. to log in to the RDS database instance through the account and password. <br>For ease of management and recovery, RDS restricts accounts. Database accounts can only be created, deleted, and authorized by the console or OpenAPI. Users cannot perform related operations on accounts through SQL statements."
      operationId: createAccount
      parameters:
        - name: createAccount
          in: body
          description:
          schema:
            type: object
            required:
              - accountName
              - accountPassword
            properties:
              accountName:
                type: string
                description: "Account name; in the same RDS instance, the account name cannot be duplicated. The specific rules of account name can be seen the Help Center Documentation: [Name and Password Restrictions](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)"
              accountPassword:
                type: string
                description: "Password with specific rules detailed in the Help Center Documentation: [Name and Password Restrictions](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)"
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}":    #Database Account
    delete:
      description: "Delete the database account. After the account is deleted, it cannot be restored and the user cannot use this account to log in the RDS instance."
      operationId: deleteAccount
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}:grantPrivilege":    #Database Account Authorization
    post:
      description: "Grant the database access privilege to the account, i.e., the privilege the account has to the database. An account can have access to multiple databases. <br>For ease of management, RDS classifies the privileges. Currently, it provides the following two privileges<br>- ro: Read-only privilege, with which, the user can only read the data in the database, and cannot perform creation, insertion, deletion, change, etc. <br>- rw: Read-write privilege, with which, the user can perform addition, deletion, change and other operations on the database<br>-Support SQL Server Only"
      operationId: grantPrivilege
      parameters:
        - name: accountPrivileges
          required: true
          in: body
          description: "Access Right to the Account"
          schema:
            type: array
            items:
              $ref: "../model/AccountPrivilege.yaml#/definitions/AccountPrivilege"
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}:revokePrivilege":    #Database account authorization
    post:
      description: "Cancel all permissions of the account to a certain database. After the permissions are canceled, the account will not be able to access the database. Cancel the access permission of the account to a certain database without affecting the access permissions of the account to other databases<br>- only support MySQL"
      operationId: revokePrivilege
      parameters:
        - name: dbNames
          required: true
          in: query
          type: array
          description: "The Name of the Database of Which the Authorization is Cancelled is Required. After the permissions are canceled, the account will not be able to access the database"
          items:
            type: string
      responses:
        200:
          description: OK
  "/instances/{instanceId}/accounts/{accountName}:resetPassword":    #Reset Database Account Password
    post:
      description: "Reset Database Account Password. If the user forgets the password of the account, he/she can use this API to reset the specified account password. After the password is reset, the previous password will not be available and you must log in or connect to the database instance with the new password after the reset."
      operationId: resetPassword
      parameters:
        - name: accountPassword
          in: body
          description: "New Password"
          schema:
            type: object
            required:
              - accountPassword
            properties:
              accountPassword:
                type: string
                description: "New password with specific rules detailed in the Help Center Documentation: [Name and Password Restrictions](../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/Restrictions/SQLServer-Restrictions.md)"
      responses:
        200:
          description: OK
# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "Region code, with range detailed in [Regions and Availability Zone Comparison Table](../Enum-Definitions/Regions-AZ.md)"
  instanceId:
    name: instanceId
    in: path
    required: true
    type: string
    description: "RDS instance ID, which uniquely identifies an RDS instance"
  accountName:
    name: accountName
    in: path
    required: true
    type: string
    description: "Account name; in the same instance, the account name cannot be duplicated."



