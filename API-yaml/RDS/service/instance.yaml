swagger: "2.0" # realized based on Swagger 2.0 version
info:
  version: v1
  title: Instance Management
  description: "Instance Management Related API"

basePath: /regions/{regionId}

paths:
  "/instances":    #Cluster Instance
    post:
      description: "Create an RDS instance and the user can use the corresponding database client or application to link to the RDS instance through the domain name and port to operate."
      operationId: createInstance
      #x-jdcloud-internal: true
      parameters:
        - name: instanceSpec
          required: true
          in: body
          description: "New Instance Type Created"
          schema:
            $ref: "../model/DBInstanceSpec.yaml#/definitions/DBInstanceSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  instanceId:
                    type: string
    get:
      description: "Obtain the summary information about all RDS instances and MySQL read-only instances under the current account, such as instance type family, version, billing information, etc."
      operationId: describeInstances
      #x-jdcloud-internal: true
      parameters:
        - name: pageNumber
          required: false
          in: query
          type: integer
          description: "Display the page number of the data. The default is 1 and the value range is [-1, âˆž). When pageNumber is -1, return all data page numbers; when the total number of pages is exceeded, display the last page;"
        - name: pageSize
          required: false
          in: query
          type: integer
          description: "The number of data displayed per page is 100 by default and the value range is [10,100], which is used for the API to query the list"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dbInstances:
                    type: array
                    items:
                      $ref: ../model/DBInstance.yaml#/definitions/DBInstance
                  totalCount:
                    type: integer
  "/instances/{instanceId}": #Cluster Instance
    delete:
      description: "Delete an RDS Instance or a read-only instance of MySQL. When the primary instance of MySQL is deleted, the corresponding read-only instance of MySQL is also deleted"
      operationId: deleteInstance
      x-jdcloud-mfa: true
      #x-jdcloud-internal: true
      responses:
        200:
          description: OK
    get:
      description: "Query the details of the RDS instance (MySQL, SQL Server, etc.) and the MySQL read-only instance details"
      operationId: describeInstanceAttributes
      #x-jdcloud-internal: true
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dbInstanceAttributes:
                    $ref: ../model/DBInstanceAttribute.yaml#/definitions/DBInstanceAttribute
  "/instances/{instanceId}:getBackupPolicy": #Backup Policy
    post:
      description: "View the backup policy of the RDS instance. The supported backup policies are slightly different depending on the types of database. For details, please refer to the detailed description in the returned parameters<br>- only support SQL Server"
      operationId: getBackupPolicy
      #x-jdcloud-internal: true
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  startWindow:
                    type: string
                    description: "The range of start time window to automatically backup is 00:00-23:59, and the time range difference must not be less than 30 minutes. <br>For example: 00:00-01:00, it means that the database is automatically backed up from 0:00 to 01:00, and the time of backup completion is related to the size of the instance, not necessarily within this time range."
                  retentionPeriod:
                    type: integer
                    description: "The retention period of automatic backup, in days, defaults to 7 days, range is 7-730"
                  cycleMode:
                    type: integer
                    description: "The cyclical pattern of automatic backup<br>1: indicates backup that the daily backup is full<br>2: indicates that the automatic backup is performed in full, incremental, such as the first day is full backup, then the second and third days are incremental backup; the fourth day is full backup, and so on.<br>- **SQL Server supports**<br>- **MySQL does not support **"
                  backupBinlog:
                    type: string
                    description: "Whether to back up binlog<br>true: indicates backup<br>false: indicates no backup- <br>**SQL Server does not support**<br>- **MySQL supports**"
  "/instances/{instanceId}:setBackupPolicy": #Modify Backup Policy
    post:
      description: "Modify the RDS instance backup policy. At present, only the user can modify the 'start time window of the automatic backup' parameter and other parameters are not open for modification."
      operationId: setBackupPolicy
      #x-jdcloud-internal: true
      parameters:
        - name: setBackupPolicy
          in: body
          description:
          schema:
            type: object
            properties:
              startWindow:
                type: string
                description: "The range of start time window to automatically backup is 00:00-23:59, and the time range difference must not be less than 30 minutes. <br>For example: 00:00-01:00, it means that the database is automatically backed up from 0:00 to 01:00, and the time of backup completion is related to the size of the instance, not necessarily within this time range."
      responses:
        200:
          description: OK
  "/instances/{instanceId}:setInstanceName": #Modify the instance name
    post:
      description: "Modify the instance name to support Chinese. The specific rules for the instance name can be found in the Help Center document: [Name and Password Restrictions] (../../../documentation/Cloud-Database-and-Cache/RDS/Introduction /Restrictions/SQLServer-Restrictions.md)<br>-  Support SQL Server Only"
      operationId: setInstanceName
      #x-jdcloud-internal: true
      parameters:
        - name: setInstanceName
          in: body
          schema:
            type: object
            required:
              - instanceName
            properties:
              instanceName:
                type: string
                description: "The instance name, which supports Chinese, and the specific rules for the instance name can be found in the Help Center documentation: [Name and Password Restrictions] (../../../documentation/Cloud-Database-and-Cache/RDS/Introduction/ Restrictions/SQLServer-Restrictions.md)"
      responses:
        200:
          description: OK
  "/instances/{instanceId}:failoverInstance": #RDS Instance Failover
    post:
      description: "Perform a RDS Instance Failover. <br>Note: If the instance is being backed up, the failover will terminate the backup operation. You can view the start time of backup in the backup policy to see whether a backup is running. If you need to perform the failover during the instance backup, you are advised to perform a full instance backup manually<br>for SQL Server, within 30 minutes of failover, restore/create by time point is not supported. For example, the user performs the failover at 10:05, then the time period from 10:05 to 10:35 cannot be restored/created. <br>- Support SQL Server Only"
      operationId: failoverInstance
      #x-jdcloud-internal: true
      responses:
        200:
          description: OK
  "/instances/{instanceId}:rebootInstance": #Reboot RDS Instance
    post:
      description: "Reboot the RDS instance. For example, after modifying some configuration parameters, you need to reboot the instance to take effect. You can combine the failover function to reboot the standby machine to reduce the impact on the service<br>**Note: If the instance is being backed up, rebooting the primary instance will terminate the backup operation. ** You can view the start time of backup in the backup policy to see whether a backup is running. If you need to reboot the primary instance during the instance backup, you are advised to perform a full instance backup manually after rebooting."
      operationId: rebootInstance
      #x-jdcloud-internal: true
      parameters:
        - name: rebootInstance
          in: body
          schema:
            type: object
            properties:
              rebootMaster:
                type: boolean
                description: "Whether to reboot the primary node. <br> -Only SQL Server supports this parameter"
              rebootSlave:
                type: boolean
                description: "Whether to reboot the standby node. <br>- Only SQL Server supports this parameter"
      responses:
        200:
          description: OK
  "/instances/{instanceId}:enableInternetAccess": #Enable the internet access of the RDS instance
    post:
      description: "Enable the internet access function of the RDS instance. After enabling, users can access RDS instances through the internet"
      operationId: enableInternetAccess
      responses:
        200:
          description: OK
  "/instances/{instanceId}: disableInternetAccess": #Disable the internet access of the RDS instance
    post:
      description: "Disable the internet access function of the RDS instance. After the disabling, users cannot access the RDS through the Internet, but can access the domain name through the intranet domain in JD Cloud"
      operationId: disableInternetAccess
      responses:
        200:
          description: OK
  "/instances/{instanceId}:restoreInstance": #Use the full backup of the instance to replace and restore the current instance
    post:
      description: "Restore and replace the current instance by using the full backup of the instance<br>- only support MySQL"
      operationId: restoreInstance
      parameters:
        - name: restoreInstance
          in: body
          schema:
            type: object
            properties:
              backupId:
                type: string
                description: "The backup Id used for restoration is limited to the backup generated by this instance"
      responses:
        200:
          description: OK
  "/instances:createInstanceFromBackup": #Create a new instance based on the full backup of the source instance
    post:
      description: "Creates a new instance based on the full backup of the source instance. The data of the new instance is the same as the data status of the source instance when the backup is created. <br>For example, create a new instance B according to a full backup 'mybak' of source instance A. The backup is created in '2018-8-18 03:23:54'. Then the data status of the new instance B is consistent with the status of the instance A'2018-8-18 03:23:54'<br>- only support MySQL"
      operationId: createInstanceFromBackup
      parameters:
        - name: backupId
          required: true
          in: query
          type: string
          description: "Backup ID"
        - name: engine
          required: true
          in: query
          type: string
          description: "The identifier is an instance of what type is created, such as MySQL, SQL Server, etc. For details, see the document [Enumeration Parameter Definition] (../Enum-Definitions/Enum-Definitions.md)<br>** Note: The engine that backs up the source instance must be the same as the engine of the instance to be created**"
        - name: instanceSpec
          required: true
          in: body
          description: "New Instance Type Created"
          schema:
            $ref: "../model/RestoredNewDBInstanceSpec.yaml#/definitions/RestoredNewDBInstanceSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  instanceId:
                    type: string
  "/instances/{instanceId}:modifyInstanceSpec":    #Modify instance configuration
    post:
      description: "Instance Expansion, Supports Upgrading the Instance CPU, Memory and Disk. Instance configuration downgrade not supported currently<br>- only support MySQL"
      operationId: modifyInstanceSpec
      parameters:
        - name: newInstanceClass
          required: true
          in: query
          type: string
          description: "Instance Type after Expansion"
        - name: newInstanceStorageGB
          required: true
          in: query
          type: integer
          description: "Instance Disk Size after Expansion"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  orderId:
                    type: string
                    description: "Generated Order Number"
  "/instances/{instanceId}:createInstanceByTime":    #Create Instance Based on Time Points
    post:
      description: "Create a new instance based on the source instance backup, and recover the data of the new instance to the same status as the data at the specified time point of the source instance by adding new logs. <br>For example, creating an instance B at the time point '2018-06-18 23:00:00' based on instance A means creating an instance B, of which the data is exactly the same as the data of instance A at the time point '2018-06-18 23:00:00'. <br>For the SQL Server, recovery/creation by time point is not supported within 30 minutes after the primary/backup switchover. For example, if the user performs the primary/backup switchover at 10:05, recovery/creation by time point is unavailable during the time period from 10:05 to 10:35. <br>- only support MySQL"
      operationId: createInstanceByTime
      parameters:
        - name: restoreTime
          required: true
          in: query
          type: string
          description: "Create New Instance Based on Which Time Point of the Source Instance"
        - name: instanceSpec
          required: true
          in: body
          description: "New Instance Type Created"
          schema:
            $ref: "../model/RestoredNewDBInstanceSpec.yaml#/definitions/RestoredNewDBInstanceSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  instanceId:
                    type: string
                    description: "Newly Created Instance ID"
  "/instances/{instanceId}:createROInstance":    #Create Read-only Instance
    post:
      description: "Create Read-only Instance of MySQL<br>- only support MySQL"
      operationId: createROInstance
      x-jdcloud-internal: true
      parameters:
        - name: azId
          required: true
          in: query
          type: string
          description: "AZ ID"
        - name: instanceClass
          required: true
          in: query
          type: string
          description: "Read-only Instance Type FlavorId"
        - name: instanceStorageGB
          required: true
          in: query
          type: integer
          description: "Disk Space"
        - name: count
          required: false
          in: query
          type: integer
          description: "Number of Created Read-only Instances, 1 by Default"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  roInstanceId:
                    type: array
                    description: "List of Newly Created Read-only Instance IDs"
                    items:
                      type: string
                      description: "Newly Created Read-only Instance ID"
                  orderId:
                    type: string
                    description: "Order ID"
# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "Region code, with range detailed in [Regions and Availability Zone Comparison Table](../Enum-Definitions/Regions-AZ.md)"
  instanceId:
    name: instanceId
    in: path
    required: true
    type: string
    description: "RDS instance ID, which uniquely identifies an RDS instance"