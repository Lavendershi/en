swagger: "2.0"
info:
  version: "v1"
  title: Instance Management
  description: API related to MONGODB instances

basePath: /regions/{regionId}

paths:
  "/instances":
    ###################### Create Instance ######################
    post:
      description: "Create Instance"
      operationId: createInstance
      parameters:
        - name: instanceSpec
          required: true
          in: body
          description: "Instance Type"
          schema:
            $ref: ../model/DBInstanceSpec.yaml#/definitions/DBInstanceSpec
        - name: chargeSpec
          in: body
          description: "Payment Method"
          schema:
            $ref: "../../charge/model/ChargeSpec.yaml#/definitions/chargeSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  instanceId:
                    type: string
                  orderId:
                    type: string
              requestId:
                type: string

    ###################### Query Instance Information ######################
    get:
      description: "Query Instance Information"
      operationId: describeInstances
      parameters:
        - name: pageNumber
          in: query
          type: integer
          description: "Page Number; Default: 1; Value range: [1, âˆž)"
        - name: pageSize
          in: query
          type: integer
          description: "Page Size; Default: 10; Value range: [1,100]"
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
          description: | 
            instanceId - Instance ID, Accurate Matching
            instanceName - Instance Name, Fuzzy Matching
            instanceStatus - mongodb status, accurate matching, support multiple RUNNING: Running, ERROR: Error, BUILDING: Creating, DELETING: Deleting, RESTORING: Restoring, RESIZING: under Configuration Change
            chargeMode - Billing Type, Accurate Matching
        - name: sorts
          in: query
          type: array
          items:
            $ref: "../../common/model/Sort.yaml#/definitions/sort"
          description: |
            createTime - Creation Time, asc (Positive Order), desc (Reverse Order)
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dbInstances:
                    type: array
                    items:
                      $ref: "../model/DBInstance.yaml#/definitions/DBInstance"
                  totalCount:
                    type: integer
                  pageNumber:
                    type: integer
              requestId:
                type: string

  "/instances/{instanceId}":
    ###################### Delete Instance ######################
    delete:
      description: "Delete instance"
      operationId: deleteInstance
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string

  "/instances/{instanceId}:resetPassword":
    ###################### Reset Password ######################
    post:
      description: "Reset password"
      operationId: resetPassword 
      parameters:
        - name: resetPassword
          in: body
          description:
          schema:
            type: object
            required:
              - accountPassword
            properties:
              accountPassword:
                type: string
                description: "The new password must contain and only support letters and numbers with length no less than 8 characters and no more than 16 characters."
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string

  "/instances/{instanceId}:modifyInstanceSpec":
    ###################### Change Instance Type  ######################
    post:
      description: "Change instance type"
      operationId: modifyInstanceSpec 
      parameters:
        - name: modifyInstanceSpec
          in: body
          description:
          schema:
            type: object
            required:
              - instanceClass
              - instanceStorageGB
            properties:
              instanceClass:
                type: string
                description: "The instance type under monthly package shall not be smaller than the current type."
              instanceStorageGB:
                type: integer
                description: "The storage space under monthly package shall not be smaller than the current type."
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  instanceId:
                    type: string
                  orderId:
                    type: string
              requestId:
                type: string

  "/instances/{instanceId}:modifyInstanceName":
    ###################### Modify Instance Name  ######################
    post:
      description: "Modify instance name"
      operationId: modifyInstanceName 
      parameters:
        - name: modifyInstanceName
          in: body
          description:
          schema:
            type: object
            required:
              - instanceName
            properties:
              instanceName:
                type: string
                description: "The new instance name only supports numbers, letters, underlines, Chinese, with length no less than 2 characters and no more than 32 characters."
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string

  "/instances/{instanceId}/backupPolicy":
    get:
      description: "Get backup policy"
      operationId: describeBackupPolicy
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  preferredBackupPeriod:
                    type: string
                  preferredBackupWindow:
                    type: string
                  backupRetentionPeriod:
                    type: string
            requestId:
                type: string   

    post:
      description: "Modify backup policy"
      operationId: modifyBackupPolicy
      parameters:
        - name: modifyBackupPolicy
          in: body
          description:
          schema:
            type: object
            required:
              - preferredBackupTime
            properties:
              preferredBackupTime:
                type: string
                description: "Backup Time, Format: HH:mmZ- HH:mmZ, only integral point allowed with interval of 1 hour."
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  preferredBackupPeriod:
                    type: string
                  preferredBackupWindow:
                    type: string
                  backupRetentionPeriod:
                    type: string
              requestId:
                type: string

  "/instances/{instanceId}/restoreInstance":
    post:
      description: "Data Recovery"
      operationId: restoreInstance
      parameters:
        - name: restoreInstance
          in: body
          description:
          schema:
            type: object
            required:
              - backupId
            properties:
              backupId:
                type: string
                description: "Backup ID"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string

  "/flavors":
    get:
      description: "Get type"
      operationId: describeFlavors
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  flavors:
                    type: array
                    items:
                      $ref: "../model/Flavor.yaml#/definitions/Flavor"
            requestId:
                type: string
  
  "/availableZones":
    get:
      description: "Get AZ"
      operationId: describeAvailableZones
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  availableZones:
                    type: array
                    items:
                      $ref: "../model/AvailableZones.yaml#/definitions/AvailableZones"
            requestId:
                type: string

  "/instances/deleteInstances":
    delete:
      description: "Delete by batchs"
      operationId: deleteMongoDbs
      x-jdcloud-internal: true
      parameters:
        - name: deleteMongoDbs
          in: body
          description:
          schema:
            type: object
            required:
              - instanceIds
            properties:
              instanceIds:
                type: array
                items:
                  type: string
                description: "Instance ID"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  mongodbInfos:
                    type: array
                    items:
                      $ref: "../model/MongodbInfos.yaml#/definitions/MongodbInfos"
              requestId:
                type: string
                
  "/instances/{instanceId}/topology":
    get:
      description: "Get topology structure"
      operationId: describeTopology
      x-jdcloud-internal: true
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/Topology.yaml#/definitions/Topology"
            requestId:
                type: string

  "/quota":
    get:
      description: "Get quota"
      operationId: describeUserQuota
      x-jdcloud-internal: true
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                $ref: "../model/Quota.yaml#/definitions/Quota"
            requestId:
                type: string    


  "/instances/{instanceId}:restartInstance":    #Restart instance
    post:
      description: "Restart instance"
      operationId: restartInstance
      x-jdcloud-internal: true
      parameters:
        - name: restartInstance
          in: body
          description:
          schema:
            type: object
            required:
              - instanceId
            properties:
              instanceId:
                type: string
                description: "Instance ID"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  instanceId:
                    type: string
              requestId:
                type: string

# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: Region ID
  instance:
    name: instanceId
    in: path
    required: true
    type: string
    description: Instance ID
