swagger: "2.0"
info:
  version: "v1"
  title: Peering Connection
  description: "Peering Connection APIs"

basePath: /regions/{regionId}

schemes:
  - https

paths:
  "/vpcPeerings/":
     get:
       summary: "Query VPCPeering resource list"
       description: "Query VPCPeering resource list"
       operationId: describeVpcPeerings

       parameters:
         - name: pageNumber
           in: query
           type: integer
           default: 1
           minimum: 1
           description: "Page: 1 by default. Value Range: [1,âˆž); when the pages exceed total pages, show the last page"
         - name: pageSize
           in: query
           type: integer
           default: 20
           minimum: 10
           maximum: 100
           description: "Paging Size; 20 by default. Value Range: [10, 100]"

         - name: filters
           in: query
           type: array
           items:
             #$ref: "/jcloud-open-api/common/model/Filter.yaml#/definitions/filter"
             $ref: "../../common/model/Filter.yaml#/definitions/filter"
           description: |
                  VPCPeeringIds - VPCPeering ID, support multiple IDs
                  VPCPeeringNames - VPCPeering name list, support multiple names
                  VPCId	- VPCPeering home terminal VPC ID, support single Id
                  remoteVPCId - VPCPeering opposite terminal VPC ID, support single Id
       responses:
         200:
           description: OK
           schema:
             properties:
               result:
                 description: "Returned Results"
                 properties:
                   vpcPeerings:
                     description: "VPCPeering Resource Information List"
                     type: array
                     items:
                       $ref: "../model/VpcPeering.yaml#/definitions/vpcPeering"
                   totalCount:
                     description: "Total Number"
                     type: number
               requestId:
                 description: "Request ID"
                 type: string

     post:
       description: "Create VPCPeering API"
       operationId: createVpcPeering
       parameters:
         - name: createVpcPeeringSpec
           in: body
           required: true
           description: "Create VPCPeering parameters"
           x-jdcloud-tiered: false
           schema:
             $ref: "../model/CreateVpcPeeringSpec.yaml#/definitions/createVpcPeeringSpec"
       responses:
         200:
           description: Successful operation
           schema:
             type: object
             properties:
               result:
                 description: "Returned Results"
                 properties:
                   vpcPeering:
                     description: "VPCPeering Resource Information"
                     $ref: "../model/VpcPeering.yaml#/definitions/vpcPeering"
               requestId:
                 description: "Request ID"
                 type: string
         429:
           description: "VpcPeering quota limit exceeded."
         404:
           description: "Resource not found"
         409:
           description: "Already has VpcPeering with param"
         400:
           description: "Request parameter x.y.z is 'xxx', expected one of [yyy,zzz]"

  "/vpcPeerings/{vpcPeeringId}":
     get:
       summary: "Query VPCPeering resource details"
       description: "Query VPCPeering resource details"
       operationId: describeVpcPeering

       responses:
         200:
           description: OK
           schema:
             properties:
               result:
                  description: "Returned Results"
                  properties:
                    vpcPeering:
                      description: "VPCPeering Resource Information"
                      $ref: "../model/VpcPeering.yaml#/definitions/vpcPeering"
               requestId:
                 description: "Request ID"
                 type: string

     #delete VpcPeering
     delete:
       summary: "Delete VPCPeering API"
       description: "Delete VPCPeering API"
       operationId: deleteVpcPeering
       responses:
         200:
           description: OK
           schema:
             properties:
               requestId:
                 description: "Request ID"
                 type: string
         404:
           description: NOT_FOUND

     put:
       summary: "Modify VPCPeering API"
       description: "Modify VPCPeering API"
       operationId: modifyVpcPeering
       parameters:
         - name: modifyVpcPeeringSpec
           in: body
           required: true
           x-jdcloud-tiered: false
           schema:
             $ref: "../model/ModifyVpcPeeringSpec.yaml#/definitions/modifyVpcPeeringSpec"
       responses:
        200:
           description: Successful operation
           schema:
             type: object
             properties:
                vpcPeering:
                    description: "VPCPeering Resource Information"
                    $ref: "../model/VpcPeering.yaml#/definitions/vpcPeering"
                requestId:
                   description: "Request ID"
                   type: string
        429:
           description: VpcPeering quota limit exceeded.
        404:
           description: Resource not found
        409:
           description: Already has VpcPeering with param

parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: Region ID
  vpcPeeringId:
    name: vpcPeeringId
    in: path
    required: true
    type: string
    description: vpcPeeringId ID
